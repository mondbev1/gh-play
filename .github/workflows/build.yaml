name: Build Service

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
        default: "dev"

  push:
    branches: ['*']
    tags-ignore:
      - build-*
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ ( github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '#build') ) && !contains(github.event.head_commit.message, '#skip-build') }}
    environment: dev
    steps:
    # - name: Set Repo Envs
    #   run: |
    #     REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')
    #     echo "git_repo_name=${REPO_NAME}" | tee -a $GITHUB_ENV
    #     echo "docker_repo_name=${REPO_NAME}" | tee -a $GITHUB_ENV

    # - name: Checkout the repo
    #   uses: actions/checkout@v2
    #   with:
    #     #repository: $GITHUB_REPOSITORY
    #     path: ${{ env.git_repo_name }}
    #     fetch-depth: 0

    - name: set version Prod
      if: ${{ ( contains(github.event.head_commit.message, '#build') && github.event.inputs.environment == 'production' ) }}
      run: |
        'echo "${{ github.event.head_commit.message }}"'

    - name: set version Dev
      if: ${{ ( contains(github.event.head_commit.message, '#build') && contains(github.event.head_commit.message, 'dev') ) }}
      run: |
        'echo "${{ github.event.head_commit.message }}"'
    # - name: commit-tag-build
    #   env:
    #     TAG: ${{ env.TAG }}
    #     SHA: ${{ env.SHA }}
    #   run: |
    #     git -C ${{ env.git_repo_name }} config user.name "GitHub Actions Bot"
    #     git -C ${{ env.git_repo_name }} config user.email "<>"
    #     git -C ${{ env.git_repo_name }} tag "${TAG}" ${SHA} || true
    #     git -C ${{ env.git_repo_name }} push --tags || true

        
